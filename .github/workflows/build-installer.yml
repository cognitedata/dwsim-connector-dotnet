name: Release connector

on:
  push:
    branches: [ main ]

jobs:
  common:
    uses: ./.github/workflows/common.yml
    secrets: inherit
  
  publish-installer:
    runs-on: windows-latest
    environment: CD
    if: ${{ needs.common.outputs.should-release == 0 }}
    needs:
      - common
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5
        with:
          python-version: '3.13'
          
      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: 22
      
      - name: Install markdown-pdf
        run: npm install -g markdown-pdf@11.0.0
      
      - name: Convert Markdown to PDF
        run: markdown-pdf Documentation.md

      - name: download-artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          name: windows artifacts
          path: ./
      
      - name: create release
        uses: actions/create-release@0cb9c9b65d5d1901c1f53e5e66eaf4afd303e70e # v1
        id: github-release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{ needs.common.outputs.version }}
          release_name: DWSIM Connector ${{ needs.common.outputs.version }}

          draft: false
          prerelease: true
      
      - name: upload release msi
        uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5 # v1
        id: github-release-msi
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.github-release.outputs.upload_url }}
          asset_path: .\DwsimConnectorInstaller-${{needs.common.outputs.version }}.msi
          asset_name: DwsimConnectorInstaller-${{ needs.common.outputs.version }}.msi
          asset_content_type: application/octet-stream

      - name: upload release binary
        uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5 # v1
        id: github-release-binary
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.github-release.outputs.upload_url }}
          asset_path: .\Service.exe
          asset_name: Service.exe
          asset_content_type: application/octet-stream
      
      - name: Install publisher
        env: 
          PYPI_ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_READONLY_TOKEN_USER_PUBLIC_REPOS }}
          PYPI_ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_READONLY_TOKEN_PUBLIC_REPOS }}
        shell: bash
        run: pip install cognite-extractor-publisher --extra-index-url "https://${PYPI_ARTIFACTORY_USERNAME}:${PYPI_ARTIFACTORY_PASSWORD}@cognite.jfrog.io/cognite/api/pypi/snakepit/simple"
    
      - name: publish connector
        env:
          EXTRACTOR_DOWNLOAD_API_ADMIN_SECRET: ${{ secrets.EXTRACTOR_DOWNLOAD_ADMIN_SECRET }}
        run: publish-extractor publish --manifest manifest.yml --version ${{ needs.common.outputs.version }}
